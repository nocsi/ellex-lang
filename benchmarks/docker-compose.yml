# Docker Compose for transpiler benchmarks

services:
  # SWC Transpiler Container
  swc-transpiler:
    build:
      context: ./docker/swc
      dockerfile: Dockerfile
    container_name: benchmark-swc
    volumes:
      - ./datasets:/datasets:ro
      - ./results:/results
      - ./scripts:/scripts:ro
    working_dir: /workspace
    environment:
      - NODE_ENV=production
    
  # TypeScript Compiler Container  
  tsc-transpiler:
    build:
      context: ./docker/tsc
      dockerfile: Dockerfile
    container_name: benchmark-tsc
    volumes:
      - ./datasets:/datasets:ro
      - ./results:/results
      - ./scripts:/scripts:ro
    working_dir: /workspace
    environment:
      - NODE_ENV=production
    
  # Ellex Native Runner
  ellex-transpiler:
    build:
      context: ..
      dockerfile: ./benchmarks/docker/ellex/Dockerfile
    container_name: benchmark-ellex
    volumes:
      - ./datasets:/datasets:ro
      - ./results:/results
      - ./scripts:/scripts:ro
    working_dir: /workspace
      
  # Performance Monitoring
  monitoring:
    image: prom/prometheus:latest
    container_name: benchmark-monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--web.enable-lifecycle'

networks:
  benchmark-net:
    driver: bridge

volumes:
  datasets:
  results:
  reports:
  monitoring_data: